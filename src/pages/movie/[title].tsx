import Head from "next/head"
import TopMenu from "../../components/TopMenu"
import styles from "../../styles/Movie.module.css"
import { useState } from "react"
import Image from "next/image"

import BackdropImage from "../../components/BackdropImage"
import InfoBlock from "../../components/movie/InfoBlock/InfoBlock"
import Rating from "../../components/review/Rating"
import ReviewSection from "../../components/review/ReviewSection"
import SingleLine from "../../components/lists/SingleLine"

import { db } from "../../lib/firebaseAdmin"
import useSWR from 'swr'

const fetcher = url => fetch(url).then(r => r.json())

const Movie = ({ movieData, movieID}) => {
	const url = `/api/review?movie=${movieID}`
	const { data:reviewData, error } = useSWR(url,fetcher)

	const [activeTab, setActiveTab] = useState('info')
	const [isLoggedIn, setLoggedIn] = useState(true) // temporary

	if(reviewData) console.log(reviewData.reviews)

	const tabClick = e => {
		setActiveTab(e.target.dataset.tab)
	}

	return (
	<>
		<Head>
			<title>Movie</title>
			<meta name="description" content="Generated by create next app" />
			<link rel="icon" href="/favicon.ico" />
		</Head>

		<TopMenu />
		
		<BackdropImage 
		title={movieData.title} img={movieData.imgBackground} imgBlur={movieData.imgBackgroundBlur}/>

			<div className={styles.containerContent}>

				<div className={styles.contentWrap}>

					{movieData.imgPoster && 
					<div className={styles.containerPoster}>
						<Image
							src={movieData.imgPoster}
							alt={movieData.title}
							className={styles.imgPoster}
							layout='fixed'
							width={240}
							height={350}
						/>
						<span className={styles.imgPosterOverlay}></span>
					</div> }
					
					<div className={styles.containerFirstContent}>
						<div className={styles.firstContent}>
							<h1 className={styles.h1_movieTitle}>{movieData.title}</h1>
							<h4>{movieData.tagline}</h4>
							<p>{movieData.description}</p>
						</div>
					</div>

					<div className={styles.containerRating}>
						<Rating reviewData={reviewData} />
					</div>


					<div className={styles.containerRelated}>
						<SingleLine data={[0,1,2,3]} type='movie'/>
					</div>

				  	<div className={styles.containerSecondaryContent}>
						<InfoBlock movie={movieData} />
					</div>

					<div className={styles.containerReviews}>
						<h2 className="h2section">Reviews</h2>
						<ReviewSection movieID={movieID} reviewData={reviewData} isLoggedIn={isLoggedIn}/>
					</div>

				</div>
				
			</div>
	
	</>
  )
}

export async function getStaticPaths() {
	let paths;

	const moviesRef = db.collection('movies');
	const movies = await moviesRef.get()

	paths = movies.docs.map((movie) => {
		return {
			params: { title: movie.id }
		}
	})

	return {
		paths,
		fallback: 'blocking' // false or 'blocking'
	};
  }

export async function getStaticProps(context) {
	const movieID = context.params.title;
	const movieRef = db.collection('movies').doc(movieID)
	const movie = await movieRef.get()

	const obj = movie.data();

	const movieData = {
		title: obj.title,
		tagline: obj.tagline,
		description: obj.description,
		year: obj.year,
		genre: obj.genre,
		cast: '',
		rating: obj.genre,
		imgPoster: obj.imgPoster,
		imgBackground: obj.imgBackground,
		imgBackgroundBlur: obj.imgBackgroundBlur
	}

	return {
		props: { movieData, movieID },
		revalidate: 60,
	}
}

export default Movie

